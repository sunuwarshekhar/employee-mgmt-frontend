/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RegisterIndexRouteImport } from './routes/register/index'
import { Route as ManagementIndexRouteImport } from './routes/management/index'
import { Route as AdminLayoutAdminRouteImport } from './routes/admin/_layout-admin'
import { Route as AdminLayoutAdminProfileIndexRouteImport } from './routes/admin/_layout-admin/profile/index'
import { Route as AdminLayoutAdminInvitationIndexRouteImport } from './routes/admin/_layout-admin/invitation/index'
import { Route as AdminLayoutAdminDashboardIndexRouteImport } from './routes/admin/_layout-admin/dashboard/index'
import { Route as AdminLayoutAdminCompanyIndexRouteImport } from './routes/admin/_layout-admin/company/index'
import { Route as AdminLayoutAdminProfileEditIndexRouteImport } from './routes/admin/_layout-admin/profile/edit/index'
import { Route as AdminLayoutAdminInvitationEditIndexRouteImport } from './routes/admin/_layout-admin/invitation/edit/index'
import { Route as AdminLayoutAdminInvitationAddIndexRouteImport } from './routes/admin/_layout-admin/invitation/add/index'
import { Route as AdminLayoutAdminCompanyEditIndexRouteImport } from './routes/admin/_layout-admin/company/edit/index'
import { Route as AdminLayoutAdminCompanyAddIndexRouteImport } from './routes/admin/_layout-admin/company/add/index'

const AdminRouteImport = createFileRoute('/admin')()

const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterIndexRoute = RegisterIndexRouteImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRouteImport,
} as any)
const ManagementIndexRoute = ManagementIndexRouteImport.update({
  id: '/management/',
  path: '/management/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminLayoutAdminRoute = AdminLayoutAdminRouteImport.update({
  id: '/_layout-admin',
  getParentRoute: () => AdminRoute,
} as any)
const AdminLayoutAdminProfileIndexRoute =
  AdminLayoutAdminProfileIndexRouteImport.update({
    id: '/profile/',
    path: '/profile/',
    getParentRoute: () => AdminLayoutAdminRoute,
  } as any)
const AdminLayoutAdminInvitationIndexRoute =
  AdminLayoutAdminInvitationIndexRouteImport.update({
    id: '/invitation/',
    path: '/invitation/',
    getParentRoute: () => AdminLayoutAdminRoute,
  } as any)
const AdminLayoutAdminDashboardIndexRoute =
  AdminLayoutAdminDashboardIndexRouteImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => AdminLayoutAdminRoute,
  } as any)
const AdminLayoutAdminCompanyIndexRoute =
  AdminLayoutAdminCompanyIndexRouteImport.update({
    id: '/company/',
    path: '/company/',
    getParentRoute: () => AdminLayoutAdminRoute,
  } as any)
const AdminLayoutAdminProfileEditIndexRoute =
  AdminLayoutAdminProfileEditIndexRouteImport.update({
    id: '/profile/edit/',
    path: '/profile/edit/',
    getParentRoute: () => AdminLayoutAdminRoute,
  } as any)
const AdminLayoutAdminInvitationEditIndexRoute =
  AdminLayoutAdminInvitationEditIndexRouteImport.update({
    id: '/invitation/edit/',
    path: '/invitation/edit/',
    getParentRoute: () => AdminLayoutAdminRoute,
  } as any)
const AdminLayoutAdminInvitationAddIndexRoute =
  AdminLayoutAdminInvitationAddIndexRouteImport.update({
    id: '/invitation/add/',
    path: '/invitation/add/',
    getParentRoute: () => AdminLayoutAdminRoute,
  } as any)
const AdminLayoutAdminCompanyEditIndexRoute =
  AdminLayoutAdminCompanyEditIndexRouteImport.update({
    id: '/company/edit/',
    path: '/company/edit/',
    getParentRoute: () => AdminLayoutAdminRoute,
  } as any)
const AdminLayoutAdminCompanyAddIndexRoute =
  AdminLayoutAdminCompanyAddIndexRouteImport.update({
    id: '/company/add/',
    path: '/company/add/',
    getParentRoute: () => AdminLayoutAdminRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminLayoutAdminRouteWithChildren
  '/management': typeof ManagementIndexRoute
  '/register': typeof RegisterIndexRoute
  '/admin/company': typeof AdminLayoutAdminCompanyIndexRoute
  '/admin/dashboard': typeof AdminLayoutAdminDashboardIndexRoute
  '/admin/invitation': typeof AdminLayoutAdminInvitationIndexRoute
  '/admin/profile': typeof AdminLayoutAdminProfileIndexRoute
  '/admin/company/add': typeof AdminLayoutAdminCompanyAddIndexRoute
  '/admin/company/edit': typeof AdminLayoutAdminCompanyEditIndexRoute
  '/admin/invitation/add': typeof AdminLayoutAdminInvitationAddIndexRoute
  '/admin/invitation/edit': typeof AdminLayoutAdminInvitationEditIndexRoute
  '/admin/profile/edit': typeof AdminLayoutAdminProfileEditIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminLayoutAdminRouteWithChildren
  '/management': typeof ManagementIndexRoute
  '/register': typeof RegisterIndexRoute
  '/admin/company': typeof AdminLayoutAdminCompanyIndexRoute
  '/admin/dashboard': typeof AdminLayoutAdminDashboardIndexRoute
  '/admin/invitation': typeof AdminLayoutAdminInvitationIndexRoute
  '/admin/profile': typeof AdminLayoutAdminProfileIndexRoute
  '/admin/company/add': typeof AdminLayoutAdminCompanyAddIndexRoute
  '/admin/company/edit': typeof AdminLayoutAdminCompanyEditIndexRoute
  '/admin/invitation/add': typeof AdminLayoutAdminInvitationAddIndexRoute
  '/admin/invitation/edit': typeof AdminLayoutAdminInvitationEditIndexRoute
  '/admin/profile/edit': typeof AdminLayoutAdminProfileEditIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/admin/_layout-admin': typeof AdminLayoutAdminRouteWithChildren
  '/management/': typeof ManagementIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/admin/_layout-admin/company/': typeof AdminLayoutAdminCompanyIndexRoute
  '/admin/_layout-admin/dashboard/': typeof AdminLayoutAdminDashboardIndexRoute
  '/admin/_layout-admin/invitation/': typeof AdminLayoutAdminInvitationIndexRoute
  '/admin/_layout-admin/profile/': typeof AdminLayoutAdminProfileIndexRoute
  '/admin/_layout-admin/company/add/': typeof AdminLayoutAdminCompanyAddIndexRoute
  '/admin/_layout-admin/company/edit/': typeof AdminLayoutAdminCompanyEditIndexRoute
  '/admin/_layout-admin/invitation/add/': typeof AdminLayoutAdminInvitationAddIndexRoute
  '/admin/_layout-admin/invitation/edit/': typeof AdminLayoutAdminInvitationEditIndexRoute
  '/admin/_layout-admin/profile/edit/': typeof AdminLayoutAdminProfileEditIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/management'
    | '/register'
    | '/admin/company'
    | '/admin/dashboard'
    | '/admin/invitation'
    | '/admin/profile'
    | '/admin/company/add'
    | '/admin/company/edit'
    | '/admin/invitation/add'
    | '/admin/invitation/edit'
    | '/admin/profile/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/management'
    | '/register'
    | '/admin/company'
    | '/admin/dashboard'
    | '/admin/invitation'
    | '/admin/profile'
    | '/admin/company/add'
    | '/admin/company/edit'
    | '/admin/invitation/add'
    | '/admin/invitation/edit'
    | '/admin/profile/edit'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/admin/_layout-admin'
    | '/management/'
    | '/register/'
    | '/admin/_layout-admin/company/'
    | '/admin/_layout-admin/dashboard/'
    | '/admin/_layout-admin/invitation/'
    | '/admin/_layout-admin/profile/'
    | '/admin/_layout-admin/company/add/'
    | '/admin/_layout-admin/company/edit/'
    | '/admin/_layout-admin/invitation/add/'
    | '/admin/_layout-admin/invitation/edit/'
    | '/admin/_layout-admin/profile/edit/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  ManagementIndexRoute: typeof ManagementIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/management/': {
      id: '/management/'
      path: '/management'
      fullPath: '/management'
      preLoaderRoute: typeof ManagementIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/_layout-admin': {
      id: '/admin/_layout-admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminLayoutAdminRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/_layout-admin/profile/': {
      id: '/admin/_layout-admin/profile/'
      path: '/profile'
      fullPath: '/admin/profile'
      preLoaderRoute: typeof AdminLayoutAdminProfileIndexRouteImport
      parentRoute: typeof AdminLayoutAdminRoute
    }
    '/admin/_layout-admin/invitation/': {
      id: '/admin/_layout-admin/invitation/'
      path: '/invitation'
      fullPath: '/admin/invitation'
      preLoaderRoute: typeof AdminLayoutAdminInvitationIndexRouteImport
      parentRoute: typeof AdminLayoutAdminRoute
    }
    '/admin/_layout-admin/dashboard/': {
      id: '/admin/_layout-admin/dashboard/'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminLayoutAdminDashboardIndexRouteImport
      parentRoute: typeof AdminLayoutAdminRoute
    }
    '/admin/_layout-admin/company/': {
      id: '/admin/_layout-admin/company/'
      path: '/company'
      fullPath: '/admin/company'
      preLoaderRoute: typeof AdminLayoutAdminCompanyIndexRouteImport
      parentRoute: typeof AdminLayoutAdminRoute
    }
    '/admin/_layout-admin/profile/edit/': {
      id: '/admin/_layout-admin/profile/edit/'
      path: '/profile/edit'
      fullPath: '/admin/profile/edit'
      preLoaderRoute: typeof AdminLayoutAdminProfileEditIndexRouteImport
      parentRoute: typeof AdminLayoutAdminRoute
    }
    '/admin/_layout-admin/invitation/edit/': {
      id: '/admin/_layout-admin/invitation/edit/'
      path: '/invitation/edit'
      fullPath: '/admin/invitation/edit'
      preLoaderRoute: typeof AdminLayoutAdminInvitationEditIndexRouteImport
      parentRoute: typeof AdminLayoutAdminRoute
    }
    '/admin/_layout-admin/invitation/add/': {
      id: '/admin/_layout-admin/invitation/add/'
      path: '/invitation/add'
      fullPath: '/admin/invitation/add'
      preLoaderRoute: typeof AdminLayoutAdminInvitationAddIndexRouteImport
      parentRoute: typeof AdminLayoutAdminRoute
    }
    '/admin/_layout-admin/company/edit/': {
      id: '/admin/_layout-admin/company/edit/'
      path: '/company/edit'
      fullPath: '/admin/company/edit'
      preLoaderRoute: typeof AdminLayoutAdminCompanyEditIndexRouteImport
      parentRoute: typeof AdminLayoutAdminRoute
    }
    '/admin/_layout-admin/company/add/': {
      id: '/admin/_layout-admin/company/add/'
      path: '/company/add'
      fullPath: '/admin/company/add'
      preLoaderRoute: typeof AdminLayoutAdminCompanyAddIndexRouteImport
      parentRoute: typeof AdminLayoutAdminRoute
    }
  }
}

interface AdminLayoutAdminRouteChildren {
  AdminLayoutAdminCompanyIndexRoute: typeof AdminLayoutAdminCompanyIndexRoute
  AdminLayoutAdminDashboardIndexRoute: typeof AdminLayoutAdminDashboardIndexRoute
  AdminLayoutAdminInvitationIndexRoute: typeof AdminLayoutAdminInvitationIndexRoute
  AdminLayoutAdminProfileIndexRoute: typeof AdminLayoutAdminProfileIndexRoute
  AdminLayoutAdminCompanyAddIndexRoute: typeof AdminLayoutAdminCompanyAddIndexRoute
  AdminLayoutAdminCompanyEditIndexRoute: typeof AdminLayoutAdminCompanyEditIndexRoute
  AdminLayoutAdminInvitationAddIndexRoute: typeof AdminLayoutAdminInvitationAddIndexRoute
  AdminLayoutAdminInvitationEditIndexRoute: typeof AdminLayoutAdminInvitationEditIndexRoute
  AdminLayoutAdminProfileEditIndexRoute: typeof AdminLayoutAdminProfileEditIndexRoute
}

const AdminLayoutAdminRouteChildren: AdminLayoutAdminRouteChildren = {
  AdminLayoutAdminCompanyIndexRoute: AdminLayoutAdminCompanyIndexRoute,
  AdminLayoutAdminDashboardIndexRoute: AdminLayoutAdminDashboardIndexRoute,
  AdminLayoutAdminInvitationIndexRoute: AdminLayoutAdminInvitationIndexRoute,
  AdminLayoutAdminProfileIndexRoute: AdminLayoutAdminProfileIndexRoute,
  AdminLayoutAdminCompanyAddIndexRoute: AdminLayoutAdminCompanyAddIndexRoute,
  AdminLayoutAdminCompanyEditIndexRoute: AdminLayoutAdminCompanyEditIndexRoute,
  AdminLayoutAdminInvitationAddIndexRoute:
    AdminLayoutAdminInvitationAddIndexRoute,
  AdminLayoutAdminInvitationEditIndexRoute:
    AdminLayoutAdminInvitationEditIndexRoute,
  AdminLayoutAdminProfileEditIndexRoute: AdminLayoutAdminProfileEditIndexRoute,
}

const AdminLayoutAdminRouteWithChildren =
  AdminLayoutAdminRoute._addFileChildren(AdminLayoutAdminRouteChildren)

interface AdminRouteChildren {
  AdminLayoutAdminRoute: typeof AdminLayoutAdminRouteWithChildren
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminLayoutAdminRoute: AdminLayoutAdminRouteWithChildren,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  ManagementIndexRoute: ManagementIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
